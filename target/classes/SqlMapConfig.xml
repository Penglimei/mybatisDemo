<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- mybatis的主配置文件 -->
<configuration>
    <!--
        配置 properties
            通过属性引用外部配置文件信息

            resource属性：
                用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下
            url属性：
                要求按照 url 的写法写地址
                    eg : http://localhost:8080/xxxxxx/xx
                          协议    主机      端口  URI
    -->
    <properties resource="jdbc.properties"></properties>

    <!-- 配置参数 -->
    <settings>
        <!-- 开启Mybatis 支持延迟加载 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 开启缓存 -->
        <setting name="cacheEnabled" value="true"/>
    </settings>

    <!--  配置环境  -->
    <environments default="mysql">
        <!-- 配置mysql的环境 -->
        <environment id="mysql">
            <!-- 配置事物类型 -->
            <transactionManager type="JDBC"></transactionManager>
            <!--
                配置数据源（连接池）

                连接池：
                    减少获取链接所消耗的时间
                Mybatis连接池：
                    配置位置：
                        SqlMaoConfig.xml中 dataSource标签的 type属性表示采用何种连接池的方式

                        type属性取值：
                            POOLED：采用传统的 javax.sql.DataSource规范中的连接池，MyBatis支持
                                        ====》每次都是从池中获取一个连接使用，使用完再放回去
                            UNPOOLED：没有使用池的思想
                                        ====》每次都会创建一个连接
                            JNDI：采用服务器提供的JNDI技术实现获取DataSource对象，不同服务器拿到DataSource对象不同
                                    不是Web项目或者maven的war工程，无法使用
                 MyBatis的事务：

             -->
            <dataSource type="POOLED">
                <!-- 配置连接数据库的4个基本信息 -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
        指定映射配置文件的位置，银蛇配置文件指的是每个dao独立的配置文件
        也可以直接指定 dao.xml 文件所在的包，这样就不用每新加一个配置文件就来写一个
     -->
    <mappers>
<!--        <mapper resource="com/plm/dao/IUserDao.xml"></mapper>-->
<!--        <mapper resource="com/plm/dao/IAccountDao.xml"></mapper>-->
        <package name="com.plm.dao"/>
    </mappers>

</configuration>